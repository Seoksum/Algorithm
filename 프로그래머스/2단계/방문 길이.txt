#include <string>
#include <vector>
#include <map>
using namespace std;

vector<vector<int>> visited;

int solution(string dirs) {
    int answer = 0;
    vector<pair<int, int>> v;
    v.push_back(make_pair(0, 0));
    map<vector<int>,int> m;
    
    for (int i = 0; i < dirs.size(); i++)
    {
        int x = v.back().first;
        int y = v.back().second;
        int nx,ny;

        if (dirs[i] == 'U') { nx = x; ny = y + 1;}
        else if (dirs[i] == 'D') { nx = x; ny = y - 1;}     
        else if (dirs[i] == 'R') { nx = x + 1; ny = y;}
        else if (dirs[i] == 'L') { nx = x - 1; ny = y;}
        
        if(ny>5 || ny<-5 || nx>5 || nx<-5)
            continue;
        v.push_back(make_pair(nx,ny));
        
        vector<int> dots1{x,y,nx,ny};
        vector<int> dots2{nx,ny,x,y};
        m[dots1]++;
        m[dots2]++;
                       
    }
    
    for(auto cnt : m)
        answer++;
    answer/=2;

    return answer;
}